---
version: '3.9'

services:
  relayer:
    build:
      context: ../../
      dockerfile: Dockerfile.development
    ports:
      - 8080:8080/tcp
    environment:
      APP_PORT: 8080
      METRICS_PORT: 8081
      REDIS_URL: redis://redis:6379
      CONFIG_PATH: config/config.json
      RATE_LIMIT_REQUESTS_PER_SECOND: 10
      RATE_LIMIT_BURST: 50
      METRICS_ENABLED: true
      # Set these values in your .env file (recommended) and use that instead of hardcoding them here
      # To avoid accidentally committing sensitive information to your repository
      WEBHOOK_SIGNING_KEY: example-key
      API_KEY: example-123456
      # Options: trace, debug, info, warn, error
      # Default: info
      LOG_LEVEL: debug
      # Options: stdout, file
      # Uncomment to write logs to file
      # Default: stdout
      LOG_MODE: file
      # Default: logs/
      # Uncomment to specify log file path dir where to store logs
      LOG_FILE_PATH: logs/
      # Uncomment to set max log file size
      # Only used if LOG_MODE is file
      # Default: 1GB (1073741824 bytes)
      LOG_MAX_SIZE: 1073741824
    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}
    security_opt:
      - no-new-privileges
    networks:
      - relayer-network
      - metrics-network
    volumes:
      - ./config:/app/config/
      - ./keys:/app/keys:ro
      # Mount logs folder to persist logs
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: on-failure:5


  redis:
    image: redis:bookworm
    ports:
      - 6379:6379/tcp
    security_opt:
      - no-new-privileges
    volumes:
      - redis_data:/data
    command: [redis-server, --appendonly, yes, --save, '60', '1']
    networks:
      - relayer-network
      - metrics-network
    restart: on-failure:5

  redis-exporter:
    image: oliver006/redis_exporter:v1.67.0
    environment:
      - REDIS_ADDR=redis://redis:6379
    security_opt:
      - no-new-privileges
    profiles:
      - metrics
    depends_on:
      - redis
    networks:
      - metrics-network
    restart: on-failure:5

  prometheus:
    container_name: openzeppelin-relayer-prometheus
    image: prom/prometheus:v3.1.0
    security_opt:
      - no-new-privileges
    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
      --storage.tsdb.retention.time=30d --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - 9090:9090/tcp
    networks:
      - metrics-network
      - relayer-network
    volumes:
      - ./cmd/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: on-failure:5
    profiles:
      - metrics

  grafana:
    image: grafana/grafana:11.5.1
    security_opt:
      - no-new-privileges
    ports: [3000:3000/tcp]
    networks:
      - metrics-network
      - relayer-network
    volumes:
      - ./cmd/prometheus/grafana.ini:/etc/grafana/grafana.ini
      - ./cmd/prometheus/datasources:/etc/grafana/provisioning/datasources
      - ./cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards
    restart: on-failure:5
    profiles:
      - metrics

networks:
  metrics-network:
    internal: true
  relayer-network:
    driver: bridge

volumes:
  redis_data:
    driver: local

secrets:
  api_key:
    environment: API_KEY
  webhook_signing_key:
    environment: WEBHOOK_SIGNING_KEY
