---
name: CI

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - main

# run concurrency group for the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed_files:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
      changed-rust-files: ${{ steps.changed-files-yaml.outputs.code_any_changed }}
      changed-lockfile-files: ${{ steps.changed-files-yaml.outputs.lockfile_any_changed
        }}
      changed-docker-files: ${{ steps.changed-files-yaml.outputs.docker_any_changed
        }}
      changed-tests-files: ${{ steps.changed-files-yaml.outputs.tests_any_changed
        }}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@dcc7a0cba800f454d79fff4b993e8c3555bcc0a8  # v45.0.7
        with:
          files_yaml: |
            code:
              - '**/*.rs'
              - 'rustfmt.toml'
              - 'rust-toolchain.toml'
            lockfile:
              - 'Cargo.lock'
              - 'Cargo.toml'
            docker:
              - 'Dockerfile.development'
              - 'Cargo.lock'
              - 'Cargo.toml'
            tests:
              - '**/*.rs'
              - tests/**/*.json

  ci:
    if: ${{ github.event.pull_request.draft == false && always() }}
    permissions:
      contents: none
    name: CI
    needs: [msrv, lockfile, rustfmt, clippy]
    runs-on: ubuntu-latest
    steps:
      - name: Failed
        run: exit 1
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')

  msrv:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push'
      && (needs.changed_files.outputs.changed-rust-files == 'true' || needs.changed_files.outputs.changed-lockfile-files
      == 'true') }}
    runs-on: ubuntu-latest
    needs: changed_files
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack

      # Check the minimum supported Rust version
      - name: Default features
        run: cargo hack check --feature-powerset --locked --rust-version --all-targets

  lockfile:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push'
      && needs.changed_files.outputs.changed-lockfile-files == 'true' }}
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      # Check the lockfile
      - name: Validate lockfile updates
        run: cargo update --locked

  rustfmt:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push'
      && needs.changed_files.outputs.changed-rust-files == 'true' }}
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      # Check the formatting of the code
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    if: ${{ github.event.pull_request.draft == false && github.event_name != 'push'
      && needs.changed_files.outputs.changed-rust-files == 'true' }}
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      - name: Install SARIF tools
        run: cargo install clippy-sarif --locked

      - name: Install SARIF tools
        run: cargo install sarif-fmt --locked

      - name: Check
        run: >
          cargo clippy --all-features --all-targets --message-format=json
          | clippy-sarif
          | tee clippy-results.sarif
          | sarif-fmt
        continue-on-error: true

      - name: upload sarif artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1  # v4.6.1
        with:
          name: clippy-results.sarif
          path: clippy-results.sarif
          retention-days: 1

      # TODO: enable this when the repo is made public.
      # - name: Upload
      #   uses: github/codeql-action/upload-sarif@dd196fa9ce80b6bacc74ca1c32bd5b0ba22efca7  # v3.28.3
      #   with:
      #     sarif_file: clippy-results.sarif
      #     wait-for-processing: true

      # - name: Report status
      #   run: cargo clippy --all-features --all-targets -- -D warnings --allow deprecated
      #     --locked

  test:
    if: ${{ github.event.pull_request.draft == false && needs.changed_files.outputs.changed-tests-files
      == 'true' }}
    permissions:
      contents: read
    needs: changed_files
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      # Get the output of the prepare composite action
      - name: Get cache-hit output
        run: 'echo "Cache hit >>>>>: ${{ steps.init.outputs.cache-hit }}"'

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4  # v1.11.0
        with:
          toolchain: stable
          components: llvm-tools-preview
          rustflags: ''

      - name: Install cargo hack
        uses: taiki-e/install-action@cargo-hack

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build
        run: cargo test --no-run --locked

      - name: Run Tests
        env:
          LLVM_PROFILE_FILE: llvm-cov-%p-%m.profraw
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo hack llvm-cov --no-report --feature-powerset --locked --all-targets

      - name: Cargo llvm-cov
        run: RUST_TEST_THREADS=1 cargo llvm-cov --locked --lcov --output-path lcov.info

      - name: Upload to CodeCov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574  # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: coverage
          files: lcov.info
          fail_ci_if_error: true

  docker-scan:
    runs-on: ubuntu-latest
    needs: [changed_files, ci]
    if: ${{ needs.changed_files.outputs.changed-docker-files == 'true' && github.event_name
      != 'push' }}
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca  # v3.9.0

      - name: Build local container
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497  # v6.14.0
        with:
          tags: openzeppelin-relayer-dev:${{ github.sha }}
          push: false
          load: true
          file: Dockerfile.development
          platforms: linux/amd64

      - name: Scan image
        uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32  # v6.1.0
        with:
          image: openzeppelin-relayer-dev:${{ github.sha }}
          fail-build: true
          severity-cutoff: high
          output-format: table
