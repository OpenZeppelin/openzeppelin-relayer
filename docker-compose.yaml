---
# Default UID: 1000
# Default GID: 1000
# Ports `8080` for relayer server, `8081` for metrics server and `6379`for redis server.

services:
  relayer:
    container_name: openzeppelin-relayer
    build:
      args:
        UID: ${DOCKER_UID:-1000}
        GID: ${DOCKER_GID:-1000}
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.development}
    ports:
      - 8080:8080
      - 8081:8081
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
        # Options: trace, debug, info, warn, error
        # Default: info
      #- LOG_LEVEL=info
        # Options: stdout, file
        # Uncomment to write logs to file
        # Default: stdout
      #- LOG_MODE=file
        # Default: logs/
        # Uncomment to specify log file path dir where to store logs
      #- LOG_FILE_PATH=logs/
        # Uncomment to set max log file size
        # Only used if LOG_MODE=file
        # Default: 1GB (1073741824 bytes)
      #- LOG_MAX_SIZE=1073741824
    depends_on:
      - redis
    networks:
      - relayer-network
    restart: unless-stopped
    mem_swappiness: 0
    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}
    volumes:
      - ./config:/app/config/:ro
      # Uncomment to persist logs
      # Default: writes to stdout/console
      #- ${LOGS_DATA_DIR:-./logs}:/app/logs

  redis:
    container_name: openzeppelin-relayer-redis
    image: redis:bookworm
    # user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}  #  uses the same user as the relayer
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: [redis-server, --appendonly, yes, --save, '60', '1']
    networks:
      - relayer-network
    restart: unless-stopped

  prometheus:
    container_name: oz-relayer-prometheus
    image: prom/prometheus:v3.1.0
    # user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}  #  Uses defender user from Dockerfile
    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
      --storage.tsdb.retention.time=30d --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    ports: [9090:9090]
    networks:
      - relayer-network
    volumes:
      - ${RELAYER_PROMETHEUS_CONFIG:-./cmd/prometheus/prometheus.yml}:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    container_name: oz-relayer-grafana
    image: grafana/grafana:11.5.1
    # user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000}  #  Uses defender user from Dockerfile
    ports: [3000:3000]
    networks:
      - relayer-network
    volumes:
      - ${RELAYER_GRAFANA_CONFIG:-./cmd/prometheus/grafana.ini}:/etc/grafana/grafana.ini
      - ./cmd/prometheus/datasources:/etc/grafana/provisioning/datasources
      - ./cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards
    restart: unless-stopped

networks:
  relayer-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
